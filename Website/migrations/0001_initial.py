# Generated by Django 5.0.7 on 2024-11-23 13:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='group_logos')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('temperature_min', models.FloatField(help_text='Minimum temperature threshold')),
                ('temperature_max', models.FloatField(help_text='Maximum temperature threshold')),
                ('humidity_min', models.FloatField(help_text='Minimum air humidity threshold')),
                ('humidity_max', models.FloatField(help_text='Maximum air humidity threshold')),
                ('soil_moisture_min', models.FloatField(help_text='Minimum soil moisture threshold')),
                ('soil_moisture_max', models.FloatField(help_text='Maximum soil moisture threshold')),
            ],
        ),
        migrations.CreateModel(
            name='Raspberry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('api_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('unassigned', 'Non Assigné'), ('assigned', 'Assigné')], default='unassigned', max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raspberries', to='Website.group')),
            ],
        ),
        migrations.CreateModel(
            name='DataPayload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('payload', models.JSONField()),
                ('raspberry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_payloads', to='Website.raspberry')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action_type', models.CharField(choices=[('ventilation', 'Ventilation'), ('irrigation', 'Irrigation')], max_length=50)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], max_length=20)),
                ('raspberry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='Website.raspberry')),
            ],
        ),
        migrations.CreateModel(
            name='SensorLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_locations', to='Website.plant')),
                ('raspberry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_locations', to='Website.raspberry')),
            ],
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.FloatField()),
                ('air_humidity', models.FloatField()),
                ('soil_moisture', models.FloatField()),
                ('sensor_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='Website.sensorlocation')),
            ],
        ),
        migrations.CreateModel(
            name='Threshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature_min', models.FloatField(help_text='User-defined minimum temperature threshold')),
                ('temperature_max', models.FloatField(help_text='User-defined maximum temperature threshold')),
                ('humidity_min', models.FloatField(help_text='User-defined minimum air humidity threshold')),
                ('humidity_max', models.FloatField(help_text='User-defined maximum air humidity threshold')),
                ('soil_moisture_min', models.FloatField(help_text='User-defined minimum soil moisture threshold')),
                ('soil_moisture_max', models.FloatField(help_text='User-defined maximum soil moisture threshold')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thresholds', to='Website.plant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thresholds', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='Website.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'group')},
            },
        ),
    ]
